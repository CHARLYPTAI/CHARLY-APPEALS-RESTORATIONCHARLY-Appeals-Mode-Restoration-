name: TypeScript Quality Gate

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  typescript-validation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 24.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript Type Check (Strict)
      run: npm run build:typecheck
      
    - name: ESLint Quality Check
      run: npm run lint
      
    - name: Type Coverage Report
      run: npx type-coverage --at-least 85 --detail
      
    - name: Dependency Vulnerability Audit
      run: npm audit --audit-level=moderate
      
    - name: Bundle Size Analysis
      run: npm run build && npx bundlemon --max-percent-increase 5
      
  typescript-quality-metrics:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    - run: npm ci
    
    - name: Generate Type Coverage Report
      run: |
        npx type-coverage --detail --output-file type-coverage.json
        echo "TYPE_COVERAGE=$(npx type-coverage --output-file /dev/null | grep -o '[0-9]*\.[0-9]*%')" >> $GITHUB_ENV
    
    - name: Comment PR with Type Coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const coverage = process.env.TYPE_COVERAGE;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ðŸ“Š TypeScript Quality Report\n\n**Type Coverage**: ${coverage}\n\nâœ… All type checks passed`
          })